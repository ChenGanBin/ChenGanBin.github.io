<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知行合一</title>
  
  <subtitle>唯一的出路就是穿过苦难</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.yilinfeng.top/"/>
  <updated>2019-06-22T14:42:57.440Z</updated>
  <id>https://blog.yilinfeng.top/</id>
  
  <author>
    <name>行者1995</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>圆周率的来历</title>
    <link href="https://blog.yilinfeng.top/posts/5d007e64.html"/>
    <id>https://blog.yilinfeng.top/posts/5d007e64.html</id>
    <published>2019-06-22T14:42:57.440Z</published>
    <updated>2019-06-22T14:42:57.440Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --><p>圆周率是通过实际<strong>测量</strong>得出的，即<strong>一个圆的周长和其直径的比率</strong>。</p><a id="more"></a><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>不知道是学了忘记，还是说从来就不知道，今天才发现，所以特意记下圆周率是怎么来的。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://zh.wikipedia.org/wiki/%E5%9C%93%E5%91%A8%E7%8E%87" target="_blank" rel="noopener">维基百科：圆周率</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --&gt;&lt;p&gt;圆周率是通过实际&lt;strong&gt;测量&lt;/strong&gt;得出的，即&lt;strong&gt;一个圆的周长和其直径的比率&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数学" scheme="https://blog.yilinfeng.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="数学" scheme="https://blog.yilinfeng.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>斐讯N1刷机后操作</title>
    <link href="https://blog.yilinfeng.top/posts/b9577586.html"/>
    <id>https://blog.yilinfeng.top/posts/b9577586.html</id>
    <published>2019-06-22T07:43:04.000Z</published>
    <updated>2019-06-22T14:42:57.440Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --><p>N1刷机成功后，为了方便使用，免不了要执行一些常见的配置操作或软件安装，例：更换国内软件源、安装docker、设置WIFI等。</p><a id="more"></a><h1 id="阅读须知"><a href="#阅读须知" class="headerlink" title="阅读须知"></a>阅读须知</h1><p>本示例系统使用的是armbian 5.67 stretch 4.19</p><h1 id="设置WiFi"><a href="#设置WiFi" class="headerlink" title="设置WiFi"></a>设置WiFi</h1><p>要设置WiFi可以使用系统自带的网络设置图形界面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmtui</span><br></pre></td></tr></table></figure><p>执行命令后，通过方向键和回车键选中其中的<em>Activate a connection</em>选项，将会弹出一个列表（<em>Wired</em>代表的是有线连接，<em>WiFi</em>代表的是无线连接），按提示输入WiFi账号密码即可。</p><p>如果图形界面中没有WiFi列表则说明系统的WiFi模块有问题，可按如下方法解决：</p><p>方法一： 执行如下命令重新加载模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">modprobe dhd &amp;&amp; echo dhd &gt;&gt; /etc/modules</span><br><span class="line">modprobe wifi_dummy &amp;&amp; echo wifi_dummy &gt;&gt; /etc/modules</span><br></pre></td></tr></table></figure><p>方法二：使用armbian-config命令设置wifi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 执行命令</span><br><span class="line">armbian-config</span><br></pre></td></tr></table></figure><p>依据提示选中Network中的WIFI</p><p>方法三：重新安装系统。</p><h1 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h1><p>/etc/apt/sources.list文件记录的是系统所使用的软件源，而默认安装的系统使用的是国外源</p><p>首先对/etc/apt/sources.list文件进行备份，以备不时之需</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>然后编辑/etc/apt/sources.list文件，把原有的源删除，并加入新的国内源（这里使用的是科大的源，如果需要的可以自行更换为其它源，如：163、清华等），并保存。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"># 科大软件源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian-security/ stretch/updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/debian-security/ stretch/updates main non-free contrib</span><br></pre></td></tr></table></figure><p></p><p>最后执行更新命令，使软件列表生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><p>等待命令执行完，至此新的软件源就生效了。</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>安装docker有一个非常便捷的方法就是使用阿里提供的一键安装脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>通过脚本直接安装docker及其所需的依赖，可以说是非常方便了。</p><p>注意：该脚本会直接安装最新的docker脚本</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://luotianyi.vc/1389.html" target="_blank" rel="noopener">Armbian系统重新加载WiFi模块</a></p><p><a href="https://www.hostloc.com/thread-527652-1-1.html" target="_blank" rel="noopener">N1求教连接wifi问题，实在不知道咋回事了</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --&gt;&lt;p&gt;N1刷机成功后，为了方便使用，免不了要执行一些常见的配置操作或软件安装，例：更换国内软件源、安装docker、设置WIFI等。&lt;/p&gt;
    
    </summary>
    
      <category term="有趣" scheme="https://blog.yilinfeng.top/categories/%E6%9C%89%E8%B6%A3/"/>
    
      <category term="刷机" scheme="https://blog.yilinfeng.top/categories/%E6%9C%89%E8%B6%A3/%E5%88%B7%E6%9C%BA/"/>
    
    
      <category term="有趣" scheme="https://blog.yilinfeng.top/tags/%E6%9C%89%E8%B6%A3/"/>
    
  </entry>
  
  <entry>
    <title>Java常用名词</title>
    <link href="https://blog.yilinfeng.top/posts/b0269417.html"/>
    <id>https://blog.yilinfeng.top/posts/b0269417.html</id>
    <published>2019-04-09T08:31:43.000Z</published>
    <updated>2019-06-22T14:42:57.440Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --><p>接触Java开发已经很长一段时间了，对于常见的名词，如：JMS、JDBC、JPA，也基本知道代表的是什么，而JNDI、JTA这些就不知道了，今天特意做个备忘录，记录下在Java中遇到的这些名词，并在后续中不断更新。</p><a id="more"></a><div class="table-container"><table><thead><tr><th style="text-align:center">名词</th><th style="text-align:center">全称</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">JDBC</td><td style="text-align:center">Java DataBase Connectivity</td><td style="text-align:center">Java数据库连接</td></tr><tr><td style="text-align:center">JPA</td><td style="text-align:center">Java Persistence API</td><td style="text-align:center">Java持久化API</td></tr><tr><td style="text-align:center">JTA</td><td style="text-align:center">Java Transaction API</td><td style="text-align:center">Java事务API</td></tr><tr><td style="text-align:center">JMS</td><td style="text-align:center">Java Message Service</td><td style="text-align:center">Java消息服务</td></tr><tr><td style="text-align:center">JNDI</td><td style="text-align:center">Java Naming and Directory Interface</td><td style="text-align:center">Java命名和目录接口</td></tr><tr><td style="text-align:center">POJO</td><td style="text-align:center">Plain Ordinary Java Object</td><td style="text-align:center">简单Java对象</td></tr></tbody></table></div><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --&gt;&lt;p&gt;接触Java开发已经很长一段时间了，对于常见的名词，如：JMS、JDBC、JPA，也基本知道代表的是什么，而JNDI、JTA这些就不知道了，今天特意做个备忘录，记录下在Java中遇到的这些名词，并在后续中不断更新。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.yilinfeng.top/categories/Java/"/>
    
    
      <category term="Java" scheme="https://blog.yilinfeng.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>博客之2019</title>
    <link href="https://blog.yilinfeng.top/posts/87daa986.html"/>
    <id>https://blog.yilinfeng.top/posts/87daa986.html</id>
    <published>2019-03-17T14:22:03.000Z</published>
    <updated>2019-06-22T14:42:57.440Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --><p>2019年的第三个月即将过去了，现在才写这篇文章好像迟了一点，不过种一棵树最好的时间是十年前，其次是现在，这样子安慰自己的话，好像还不算晚。</p><p>在2018年里仅仅写了几篇文章，不过幸运的是因为有个博客，所以总想着弄点什么来写写，从而养成了写文档的习惯，遇到不懂的、特别的都有记录下来，期望在后面的时间里写到博客上。</p><p>在前段时间，突然萌生了换个博客的想法，wordpress、typecho、hugo这些都研究了一圈，感觉就像换了一个博客所有的事情都将变得会不一样似的，就像2018年里的目标并没有达成，反而是东学学西学学但并没有实质性的进展。</p><p>最后的最后，其实自己需要的是一点坚持——对目标的坚持，也是对适合自己的学习方法的一个概括：坚持！每天运动一下、学习一下、记录一下，明天就会有那么一点不一样！</p><p>题外话：最后还是没忍住折腾劲，对博客进行了修改，当然博客程序还是那个，但是配置上做了很多修改，对以前的文章的结构、分类、命名、内容这些也不大满意，所以也进行了修改。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --&gt;&lt;p&gt;2019年的第三个月即将过去了，现在才写这篇文章好像迟了一点，不过种一棵树最好的时间是十年前，其次是现在，这样
      
    
    </summary>
    
      <category term="日志" scheme="https://blog.yilinfeng.top/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="https://blog.yilinfeng.top/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>博客之始</title>
    <link href="https://blog.yilinfeng.top/posts/40124174.html"/>
    <id>https://blog.yilinfeng.top/posts/40124174.html</id>
    <published>2018-02-15T16:00:00.000Z</published>
    <updated>2019-06-22T14:42:57.440Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --><p>以前总是看别人写的博客，用OneNote做的笔记，当面试的时候被问到：你有写博客吗？我的回答是NO！ 那时候以为写博客离自己很遥远，觉得自己的水平低写不出什么东西来，但是现在仔细想想，不正是因为自己的水平低才更要写博客吗！</p><p>通过写博客来做笔记并且加入自己的思考，摆脱以前一贯的只记忆不思考的习惯，一次又一次地修改完善，才能更好的提高自己的能力。</p><p>在这特殊的一天，踏出新的一步，祝2018年大家越来越好！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jun 22 2019 14:43:21 GMT+0000 (Coordinated Universal Time) --&gt;&lt;p&gt;以前总是看别人写的博客，用OneNote做的笔记，当面试的时候被问到：你有写博客吗？我的回答是NO！ 那时候以
      
    
    </summary>
    
      <category term="日志" scheme="https://blog.yilinfeng.top/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="https://blog.yilinfeng.top/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
</feed>
